'Copyright (C) 2017  Intel Corporation. All rights reserved.
'Your use of Intel Corporation's design tools, logic functions 
'and other software and tools, and its AMPP partner logic 
'functions, and any output files from any of the foregoing 
'(including device programming or simulation files), and any 
'associated documentation or information are expressly subject 
'to the terms and conditions of the Intel Program License 
'Subscription Agreement, the Intel Quartus Prime License Agreement,
'the Intel FPGA IP License Agreement, or other applicable license
'agreement, including, without limitation, that your use is for
'the sole purpose of programming logic devices manufactured by
'Intel and sold by Intel or its authorized distributors.  Please
'refer to the applicable agreement for further details.

'Device #1: 10CL006Z - C:/Users/anges/Documents/IFE/IFE_DISPLAY_2017_18/Software/SYSTEM_VERILOG_DISPLAY/output_files/IFE_Display_2017.sof Mon Apr 16 00:11:31 2018


NOTE "CREATOR" "QUARTUS PRIME JAM COMPOSER 17.1";
NOTE "DATE" "2018/04/16";
NOTE "DEVICE" "10CL006Z";
NOTE "NEED_FREQUENCY_CONTROL" "0";
NOTE "FILE" "IFE_Display_2017.sof";
NOTE "TARGET" "1";
NOTE "IDCODE" "020F10DD";
NOTE "USERCODE" "0009B96A";
NOTE "CHECKSUM" "0009B96A";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A25, A42, A93, A43, A92, A94, A95, A105, A109, A111";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "68";
ACTION CONFIGURE = L20, DO_READ_USERCODE OPTIONAL, DO_HALT_ON_CHIP_CC OPTIONAL, DO_IGNORE_IDCODE_ERRORS OPTIONAL, DO_IGNORE_INTOSC_BYPASS RECOMMENDED, DO_BYPASS_SECOND_IDCODE_READ OPTIONAL,
L27;
ACTION READ_USERCODE = L25, L27;
ACTION CHECK_IDCODE = L966, L27;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
BOOLEAN V185 = 0;
BOOLEAN V193 = 0;
INTEGER A12[1] = 12;
INTEGER A105[1] = 0;
INTEGER A59[1] = 603;
INTEGER A60[1] = 226;
INTEGER A61[2] = 34541789, 1;
INTEGER A13[1] = 36;
INTEGER A147[1] = 0;
INTEGER A25[1] = 10;
INTEGER A43[1] = 2944296;
INTEGER A109[1] = 0;
INTEGER A111[1] = 0;
INTEGER A125[1] = 0;
INTEGER A186[1] = 0;
INTEGER A174[2] = 0, 0;
INTEGER A92[1] = 0;
INTEGER A94[1] = 0;
BOOLEAN A95[1] = $0;
BOOLEAN A93[1] = $0;
BOOLEAN A96[1];
INTEGER A97 = 1;
BOOLEAN A42[2944296] = @
bsP10u@@@@3q6aP86Zm6Gj@@t@@@l@tVVodl_c7_ybF@zZV_@N@zpl@@tV_tF@ud
V_nF@ypV@zd@_hiH@@@Zj9EuCQRyF000000O1Ae2K85e8AO014G028W04G00fW4F
m1TW3v078W02GG15eW2AG15KG6nW028W3OW6mWCWXOWXum05KG0fW4AeW2KG144D
Ia2FqMg8saG2n01400n4FY8XeeYAIH5KGC1Z8I8nB6G0004J2H0H4X8Y82H4H42A
eW4KG19eW2G014WW2A81LG1P93IJC4eO8p9H2HY823vn72JL000000014W028014
GW02801KG1Ae88FQGaWXKH5H4RY9O8W00QYO0W00WKY19M6000e05KG18W02G000
H4m000KdwghEAfaIK200f4jaZyGAX4XOCW02801G018W0Ya23IQ89nx74G0H8Y8Y
owm8xZ1KG15eW2AG154a2c0000Yj23014G028e8NnWJ06_1O04G298X4IG29a176
44P0eX6QG38W04G018W0YG294X03CW1cO4JCn06OW1Cm0d1mG3W1116WOY9U1eWe
0305KG1AuW3Sm1q_a10YG2H8XGCHi18W02G03CW168Y8I0KG15eW2gO0303CqYMQ
f5Sm17u8cO4JCGZM608Y96n43NoW102Cm06O018W02vaJEo9cO4JCv8dSoZ1O81p
00145PJ9KlcGO23X8C028X4aG2L4H25G6W3Eu07OX5imYAKH5L9560Aee2LKHLo0
3028W04H4X8Y8Q1e04H4Gx0FaWPGzB3fD902008mn0Co8ZOaH6n8Z000000W0280
12801aJSo9dm03CS0CG3W1OY9cE06e1mWC06Y1C0JCv4dSofaW7m4KG1Ae4YG29K
2014I8X8428014000000TrLNwoCpOcP06fJ0008014GW804000000BjabMI9AfaI
28W040280142H8X42n4JCY9aG4I8X8aG2n8ZCYHY96n4pCcPcvG83o0Oe8A14pCp
OcPcnCpCZTsP7x4JSe33YQmGA13gnX100Wmn16WG00eFd1W2Ae05zqZUw94X4I8Q
fbMqo8ZH4Q1pCpSO13ISyG4X7YrOGOF6GAfaYKI95fa2Gqg42eOGC03GAfyYNUv5
zqJFwPdTipEzedUwHEvaZSsP7xiJEo9dy40441mWK06a0WWS064NnWqAC05KG1A0
0G8YGGe024sm0W16O0pSpPkv4YG29KvbNkoPaHCo8X1DC0Z4I829aIKI9buaJEn9
X4c1mW07C4Fn0CoeXCqG3JWm000000W02nCyGX5Me29amO69arW14I8X8aGsnExi
ZKI95fCo86Pimi06WGMP5hiIAI9bKbMQfArMRPhjtwsRlLhjsgMPbLioAhObLMLR
jrgMOW1Cm03OW16n4JCY16Oo0mGD032Ez08_yJV_9duaJE3EP08X48014GOY9cm4
3Cacn0Sm17uW16gqa06Uv5lyoBUvbNm03CWX6QG3Dm06OW1kuYB706e1W1yn7VuZ
F_m7V4X8Y8I2028Y8YG4PaXCoe3TqH7o8ZC706e1W1aH6P83W02G07qW3E800000
8ZCz0IWCKI9AfaIKI9bHoC04G07uW3EKJDrecIAh1OGU6FGCndxypFtvdVkpPcPC
pSpQkvcnCpCZPpDdvcB6n4JCY9cO4JEv8dSoHEvaZAge2L4Haa29yJu1o8ZjirMR
PhjsoMPafkW1W2Ae05rK7H81KsPdwiJgHDrKZRkv6tKJDgfcu4FUWvtVtxlVkpF@
y4MCOeX6oG7SW3EO03Cm0cOY9Cn4JOY9683W1cOW1Cm03OW16mYBke5NSHBku0Z0
Cm03DaX6QPBlyon0CmYBo86PaH8ZCoGcPcnCp83PaHE303G6PaXioAJPbHE8W1FU
I0o8ZCa12ekZ68im2JOX5cm23WXj90002H8X4I2024I8X8aPcnCp4ZOY96lyoBUf
bMqIBXa2m0p4VyYF__qNVzfdUwHFzqZUwv7@ypF_xl@ytV@vl@wJVzr7kuYh303q
0mWC0C43m0SnbJfhC0J01KxI305KG1AW0ArK294I000000014W020PRD8JR2cOY9
CH4H8Y86qW3EOCN3KG1NuYBkGNTrbkge2LKH7weZEKH5LeYBkm5NyXF_u3NSn5ke
YAKH5KC1q0Km17uW3Em17SW7Uu1FKGH_l40X8YG4H0ORS5H4I0000000WnuP9a7D
10nCpOcPVvhl_YRkv6tkwANTbnTQ6WHVzbl_o9Evap40441m0SoflyrNVJ0GGEW7
m94GKeq0JCn4c028Y9cG4F6kGp00_u3Vy1Um3Fy0000004H4Y8Y84H4HZCo86PaH
Co8018W02weZEqH4H8YuoMUvbzuZFwn5NqYB_fF@yJRkvcsSn5juYFc2m0BkvcsS
pDN0KWDtyJV_vd9088AW1sSp9sfOW9W0YiaU4rmW0K6014G02G0HML30Cm03OaG2
I8f05KG1AfaIKY16m0398X4I03Cm06KG1AeW2KG15uW3Em1TqXEwe1DqG3geYAKH
15I1O0Vyn7_uX7ym3DeX6QG29aW4I819aGcDH6G6RiXDs819aGYWaO0JCn4cOY9C
nKWSM9aa818Y8YG4HcnCpC3H4H4YjsgMRDLfcQgP0CGhjYuI06W8Y8oJFzadSo9E
vqHEweZm4JCX9004_YX8WCG014O1G1v0O8BI2OSW1Cm00cKqWeL9aKS3CvcRSpDt
ucRkX9cO2JDracQYfK0Ie603oCn0o9dOncOGg9CSm23Via0JDrKcQgfCrK02FBXS
eC0faIAI9amOYKnxl@ktV@Tl@EpX0b0W0QCZDsO90GWn6RCZjpEsPdPCpCp4HX1T
KOWPcPc306e103SxjtwsRlrjtEpA06OcvcpSpTlxl@_yNC8T73GDrKZQlzctUJDg
fcweLC0tSJSCHUWuX6oG3DaX6Qe0rO8I53wKnWaLUm4F_e7VyHF_uZ6OW1CG8X8a
GAMn5NC00000CuW6SmXCqG3vfdUoJFyW7UuX50Am3FyadUwfCfyeQA92lw10Dm0r
kOGUW6asd1nHm07TqHEweZSqH18W02GG15aWI95fao9EvaJSm17E0OW60CWJEvq1
03q0W1P0OGWLIaQr3OI8X8aG0DyL20286m03CaY7628W040W0MRc1nBQ000G829a
G06OW1iW2IG114W028EvaJSAim4MOcnCpC7Uc106OcnCpCJOX5_0W1Q0mWK0CeFg
4mCm03OW1Q0i7onp300mY3uOW510Wm4I00Ag85LKn50AWYAwDlzsRQhjsqsH7veZ
AE3W1KqH7p08Xh0I8M13wLm0AgeYK400AbScr0gfQ0rIDWGuX7UmZ2AG150CiWDX
JaGG3GgP41uCYdfPV0KQWq9DyVx4@7fn@rWyVs9v000We1O6000WK2G200016182
00G0TKBHQ0F0WW000W0mH0IyOj1bKdmH0OKIS23Zzm8090WBqEZ0Cw9eYZ06fMxM
000GSyR2@9a0020WB5IOeL3gIGYbgPOcR6000ueC00eL060G01C2m302800280aB
S24G0W4K0WC20340W0kPGYq0U00154001aq7C004G0800001400148ABs04G0000
084G40KEe1rGaW0206W004LHa000881100HZd020G0204GZ0y000WQQ100lJ0sU5
CyEX7DJWH45LyEn3zhR000e2i100D8z@SOZ5I23nt3300unOd_Vf1H100Q2D00eJ
i@3Ix@ot_Fnk@Rvx@w4@F3o@lHQC00W0w5002xqxTuU8igO100KG200eUBc100Kg
T00eGC8t4pcAUD000SX410WuR@lot@ViJE00GPS000YvZP00Ggw100grnusuD000
8bT10WI3aEvx@RB@@jWOh@V3000efT00O__zkFcX9aJ0400nW@s0002000Ob800W
16Mj@@G0001vU00uMYOx@V3000MM200gqWP00Wtu500w@@@Wq_l@Vv0G0R5DOrTq
ysMTX0200u4xS0G0DQ3008tR8B_c700GLy600E3Ajf@DObyGIBd7100iY008Qkt0
10W0NtZnKXO00W040W00WW0W2zDeH0F000Gyhk4D2y00WW000W0WWY0o88700msz
McMf1LSAV5H14ol@R000_5N00G@@lLRG8b6m300u9i300vRzMf1T100Im800Gx4A
MblG00Wwr000KQ0aDno300G7I100HQ8T@@6atIBLpc0002WyMCeH0LQSvX61U000
G08WGWC2o180S2H00WI3UB6XD0100000800G8Gl2v040atJ00Gf1AcqW1XHm3G0G
Up2W009a0014018101810194281428002984G184G1C204210Ye0C08021940816
88008f808XAG8W0G090G0Dm_0y0f42H408G2X0I0XG22XG220KW2a42Q4m0GG1G0
I0GGQXGq5G58bG08WG051W1428002f461W18XG08W001G09HEC0G5acjwK5DRnJ@
@OWAo1e@Vf@wSl9yRPB@J4y00SxFgLpVY7Z7Wso@lrVdgMbAPO40lFgR@@LGfO18
fX@x@NE00W0z@tYT93W_@@ljy@Rdu@QvTw1f07TP9DA70z@@V@@@dyz@XqyV9sD_
L5OoDR0QB@@_@55w91GgE0t@@3MkT0MQWP0400g_30QBFjyp91100010WWsovXko
3GTY@dlr@vRzVBV@7DezbOpSotINYj1jbdC0F4Wso@FVh@7BkERrB0vR9Tot@tM_
@TB@VWq@NYz@jb@V4x@NB@@jb@VRv@7n_@ro@VM_@NYz@ro@VRv@Ndu@jb@VRv@t
M_@jb@VM_@t@@@jb@VRv@NBVW00a04qH0qM_@9VBgKI4WIibkjy@VrtlbOIet@DW
P804n_@ro@Vu4lr_l1MII0w@@@_@@l@@@x@@@so@ljy@x@@@_@@lM_@RB@@M__lM
_@hJy@w4@ljy@RB@@so@ljy@RB@@so@ljy@ZO@@sopnCp1GRv@tM_@jb@VRvsdyz
@PU7R@@O0JS1uj0Q7_V37gB0Pv@V@@@t@@@Pv@VRv@tM_@z@@V@@@NB@@Pv@VRvn
QhU1eM_@hb@@so@ljy@RB@@so@ljy@po@@_@@ljy@ZO@@so@ljy@RB@@RvpiJwP0
G000XZ0upWaF@t0nS80v@dPvtsueI0eM_@po@@_@@FYz@hb@@_@@@Od99yr0q@Fp
2000iSl0q@@@z@@Vjy@db@@z@@V@@@t@@@Pv@@qWs0W00mm71GRv@tM_@z@@38W0
W_@dXME2Gf1CB000m2E1GM_@t@@@HQuNRvJM3IB5gd0P02W8spycuMIXF1gfE0jb
@VRvbMLr@TB@@Qt5rMEC6Q10ADWP00004QJ0I__@so@FYz@hb@@iy@l@@@x@@@_@
P3W00GRv9hHv0e@@@x@@@Qv@FB@@x@tZgJIEGQ3aIY0aqm@9DyV@@uDf1p0800Kz
70qM_@z@@V_M@dlr@jb@Vjy9NYjn00408@i0KQWqD3QGRv9BeZ0ejSf3Ix@sshx7
yMKR80albqPCSRo@OmRU18B@@x@@@Qv@FB@@x@@@_@@l@@@RB@@so@l@@@hb@@iy
@ljy@x@N5ed40ro@VI3@dbVTsgN0QB@@so@ljy@RB@@so@l@@@RB@@so@FYz@hb@
Xso@F8j@ptw@sohEvRrpo7c8s@l9VER@t0eYE0b68T@@@t@@@z@@V@@@tM_@z@@V
@@@NB@@Pv@VRvR3002GA92Gjy@dqm@z@ZNRv@tM_@jb@VRv@tM_@z@@VRv@tM_@H
ipJ9s6KBln00a04qH0qM_@1fzV_M@tM_@v4@Vjy@db@@z@@VRv@7n_@Pv@VRv@tM
_@z@@Vjy@db@@jb@V@@81za0eM_@JQu@iyhpMz2GRvI32200220GLuv00WW00WWG
Z06bHWGW00PmD00qM_@jb@V@@o100uci00GM_@t@@@z@Z7400Wgm@10G0GZ06bHW
G0uKEBDGQ000Y9DmC0g6L0808I908G1G8H1G8H1G81XGA1XG21H0O0I94Y80G840
8Y2m042X440f437t0WaQWD2O0IB4Y_08fHWYW08a61W10X421X42094149pHHGQ@
tM_@ZrN70e_nso@FYz@hb@@iy@l@@@x@@@_@@l@@@RB@@so@l@@@hb@@iy@ljS_5
GA9MB@@9DyVTY@tM_@jb@VRv@dlr@Pv@V@@@tM_@jb@VRv@tM_@jbpl0sgtyjakj
y@ZO@@Qv@l@@M0040q@F60WCfBDGw_@@l@@@Fnud_@j10KkR@@@tM_@jb@V@@@7n
_@Pv@VRv@tM_@ro@VRv@tM_@jb@VRv@tM_@Pv@V@@@tM_@jb@VRvjB0AGhjy@3Ix
@yj_ljy@RB@@Qv@FB@@x@@@_@@FYz@po@@so@ljy@po@@Qv@FB@@RB@@_@H20edK
jy@dqm@z@Nd0sgtso@ljy@RB@@so@ljy@x@@@so@ljy@ZO@@QvVejy@3Ix@yj_lj
y@RB@@Qv@FB@@x@@@_@@l@@@x@@@_@@ljyh0mozs@@@z@@Vjy@db@@z@tUWq6q@@
@9DyVWq@@mUH0OpsRB@@so@ljy@RB@@so@ljy@RB@@8s@lv_S4WPSrM_@1dBg0I9
nIihkjy@RB@@8s@lM_@po@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@hUJaP00040eU2
004401440144014001400L_s2W140W04GW04GW04Gq8WHP484d07W_@b660W060W
060W060W0Axi5020W048004O004O004O0GZ06bHmF00a0W400SGAp004p5400agw
pu408W028W028W028W028W_@R1W028002801280128Q4meC2428SWNx4Idb@@z@@
Vjy7M2j10088008820880m880G8AGG820GA20G220G220G220Go@USw@3D2OK61L
0044e_Q32@d1AqF0z@N1W020W0A0W02WW02WW02Xa02WaW2W4W0W4W0W4W004W00
4uCfG08W0q8WHP4i14G0WC2Ce@@4000aR400ueX700GW00GW20GWE0HW60Jac0Hi
60TC605i605i405i005i004e004W00K2E6000010W008006800QZ06bH060W050W
04aqm30G25po@@_@@l@@@xM_@0f@Fvx@RB@@8s@lM_@po@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@Fdu@xM_@0f@l4x@RB@@8s@lM_@po@@_@@ljy@ZO@@Qv@F
B@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@550G0G@@C005Z
h@@@FQGK0SPiz@@V@@@t@@@z@@V@@X0001e@VZ1G000W6bh@@@x@@@_@@l@@@x@@
@_@@l@@@x@tC1iLld1nC00800Kz700220022002200200020W_@FfE9304W00400
24002400Y61CAZ0X83t0q@@@vRzV_M@t@@@z@3F0G000G00vjqoWBC00001000HZ
06bHWG01WJn900KQWqG400IQ8PW0GrG5010IA102A02IA02IA02I84II84IG04IG
8aIG8aIO4084204H1O0I842I80IICGIG0GIH0GILWGG1WGI1WGQXz1GIZ0519409
f03W08aWG8aW08X809PEK000LGcC0000000wI200otw@yj4r700G@@@t@@@z@@V@
@@t@@@Pv@V@@@db@@jb@VRv@t@@@ro@VM_@t@@@z@BTTY@tM_@jb@VRv@tM_@jb@
VM_@t@@@jb@VRvXNB@pu401QB@@so@ljy@RB@@soj@CV3YpFX0z5Tpj44000KxM2
00W_PE0G00WG00WG00WG00WG00W800W800W80008000840080G080G000G0G0G00
0H000H000P0001W001W001W001W800W001W001m0Q4812082D2OK61a000G8Z030
100aHW14G1D10400900084008K4WI3CWe00W800mI3e2W00000Y000Y2G0o00000
106010A0HC2vO00W400aGl260Y00eN138WW0s@@@z@@V@@@t@@@z@@V@@@t@@@z@
@V@@@t@@@z@@V@@@t@@@z@@VRv@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@
z@VO4x@t@@@z@@V@@@tM_@ro@VM_@t@@@z@@V@@@tM_@jb@V@@@t@@@Pv@V@@bkj
Cp00004GA9cqm@9DyV@@xrM_@jb@V@@@tM_@jb@V@@@tM_@jb@V4xv000GiMUc50
5erMkq1fzV_M@tM_@Pv@V@@d3200000000Matiy@@e1H1mcnr@@@z@@V@@@t@@@z
@@V@@@t@@@ro@VM_@t@@@z@VR0f9340004v8LWq@NYz@9V@VRv@NYz@Pv@V@@@NB
@@Pv@V@@@tjy@1I@V9s@7nECTvdC02000qeSHi@Vjy@db@@z@@V@@UKTIox@RW0I
9na6_FfX@x@VlpWI600400g_3001100110011aVRBltQ0W040W00GW00GW00Gq8W
HP484Pu6W_@@FVh@ptw@_@@l@VuB7Nn_pBofS2Gf1I30418N_a1081W2q0W0WaY0
WW20Xa20Xa20X421f42194019429942f8429Y00XG0WWG8bWG8XGG8X0GAn0H210
HA10Hg121A029A02fA429w3Wa614YG8X0G8bm80C8Z03W8WaOEA088j@ptw@yjmh
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@so@ljy@x@@@Qv@FB@@x@FV00G0sgN0gb@@Q
v@ljy@RB@@so@ljy@RB@@iy@l@@@RB@@so@ljy@RB@@sov4020GyxTPwo0uMUvQD
GB0400SrR0goNke6wIuy2G_@JUJ1FuiB0gb@@iy@l@@@x@@@_@@l@@@RB@@so@l@
@@ZO@@iy@l4x@Bn_@so@ljy@RB@@so@ljy@RB@@iy@l@@@RB@@so@FYzmRB@@Xp5
5w91G3xC3002mMz2G_MINYz@9VlA000X0pD6Of3G4xRlqWneo00oo@@_@@l@@@x@
@@so@l@@@x@@@Qv@FB@@x@@@_@@l@@@hJy@so@ljy@RB@@so@FB@@RB@@so@FYTB
10Y0KBFpg6L0QB@@sol5G00GRvwITt0ejy@VrFpp@Jm6r2G4x@NB@@Pv@V@@@tM_
@ro@VM_@tM_@jb@V@@@NB@@Pv@V@@QjjCp00W0aIY0aqm@9DyV@@urM_@jb@V@@@
tM_@jb@V@@@tM_@jb@VRv@tSV200a0G1Q0qM_@1fzV_M@tM_@9V@V4x@NB@@Pv@V
@@@t@@@z@@VRv@tM_@z@@Vjy@db@@jb@VRv@NB@@jb@VRv@tM_@jb@VRv@db@@z@
@VRv@tM_@jb@VRv@tM_@jbFC040WsofI903GRv@Vqmd0000KKE0KB@@Pv@V@@@t@
@@z@@V@@@t@@@z@@V@@@t@Vul9oC0W00rJ00WW04WW04WW04W004Gblj00006W00
2W022W022W022Q4meC2_14Wu4m10W_@VMV0W10GW10GW10GW1IQe5000W00G0140
01C001C00HZ06bHWG090a0000SGAp0nyWILLQ0012G012G012G012eTYM00002G0
10G014G014G014D2OK612X3y0eT2fRB@@8s@lM_3BXs0011001H0011031101H12
1H009H009G009G009ayV8d_pGZ06bH06GG00glsWn@J000eW_10W_@b00004W004
W204W084W084WG85W085a08140814081400140014uC9F00002G00eH0Zo803G00
2P4OmtiC00o7ve19048004e004e384e1O4f984h1e5Z1e0h1e0B1e0B0e0B0W0A0
W0A1V30080040W00mW00GXgH0Zo8034e004W002qz1Ie80Pv@V@@@t@@@L__VEn@
dyz@jb@Vot@tM_@Hi@VM_@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@dJy@TB@VW
q@NYz@jb@V4x@NB@@Pv@V@@@tM_@Hi@Vjy@db@@z@@V@@@t@@@z@@V@@@t@@@z@@
V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z
@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@
@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t
@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@
@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V
@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@
@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@
z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@
@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@
t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@
@@t@@@z@@V@@p0200e@VOG480q@@@fC0P@@ImRU1e@@@x@dM8000z@thzE0W43OO
q0W1000mCt1e@@@x@@@_@@l@@@x@F40200z@Ri0000DA70z@@V@@@t@@@z@@V@@d
aK5mz@R0gC0WwjU0080m0NzgNK1e@VipP8XXqw50040wy0WpWCuwj4W020K@ck08
00muZ00220022002201A0002004W028CR03z@Z10040000G040G00GG00GGeHW40
W000W00e@@JQ4meC2O04088900W_@DOd13ADGb_@j400eYP10WI3aEVB3IQOO00G
000WU2xy@_@@l@@zW000W000eTbM6S91004000400040q8WHP4840EbpI3a600WO
I3C3WgH5020YK202K04IK04IK04IG8aIG8aGG406WK2X8204210Ye0C0XG811GAH
1I210IA10Ig1s8W18jG8w3Wa61A22WGQ40604I844I80aG4GaC75LGoGgJ9yvhk0
Oubx@@P1iLlVToC00800Kz7TbRS@@90Wdah@@@x@lhVnB20ZNJ@@@lqWe0OFY3WG
hT9yum_7Ej790mmAVPWNf1N10YOPf3jw@lE00PjPv@@FBETjRBjyQGElX0W7KjjS
ss2EXrWRfOO627s304000utEx@Vo6Ka8EPL007f534jz@l100go_@jihcS00KCKw
aYbSln07g0W9EeYAsY4dXdGE9HZ7g8F40q6dZlzMEwvqg_9001lx@dpjNUOAUI0G
5@tH3R0010covXExzeoQ3wXF10W02@t7200IpItOhqW4QDuXFxbek@400284Fk1G
010gfX41GvYr9osqsmKf_3pZ7200800WVxXZN70G0X1xD0Y8WG_v609C08@y4AKt
01000BtBnxzLKeE308KkF@WmstPOP23wxtWyqd10fWGf1G_r@F0er7otYjs9aecV
3ID0ZU0IO@VL0WcRUY@RbyRmhOd4VG2xeT2000004dib6KNx4sCw990u2fN_lkqF
CecV6ovdXM0geeqJ00MEqMERn691400002000094oFdXyMCOzP9MNTZ2rJ00nCI4
xr5KD3Tkp000000G000G10IXdXra895_40WeKcqGT1rx1040XcxD8De7Qkd40WxO
jbB76XGY80C06I84aI84am86vdR060IgypPe703gJF14YX4jbJ2IMGpHibRAe76r
1Z6Pj10GUSRv@VAzd00W000lmayz@lVBA0cNgVoLCHMC6aiY_@n00flR_wAEnUH0
8B3AaNn_lnOfXM0W7kr@le9wt20e8liy@FfX@RBNzd@39ibMw@@10CvIr9Mts@sS
uV808000WzJ5I_RBVFp0zj0WNDCQTyco7ZpT_10zaISyob_@9djR30wGnWmiiW_S
0G1@NlbhPx720eKcgyjSDR66qcXqy310bUIX6J6tEF003AhbdjClbeLVFAq_Xal9
10nG_PGoT7q6N@pGWlLCnU828cPQBlk_oh8fT9ca_Xky3100400emqsoPxXT9oFd
1W000jbpW000Xs@FfGT600pFq7jS7pZns@9aoS23aF30qCeI3ghPwJsHP60eVpjb
pMf1mCB@C0Gd1Qdek4yzeTYDopF40KtvZo@sy@6qtz3zKaJ@@I0WZpwns9ZqW70C
fL9VNN9sjKeUB00PSZOdjj@hejS9IX7Zso910K41000n8sPRmV9QBVZ8wV8YTI0W
X9tMkS1aRGVv9aVk79ddGXwLqMk48Ph17n6l7oF95RO0mJTKYTrtodsFQ6a8F340
00gzlYBfP8LD3oLx40K_brTNQd@g00FdV_@tM_d100W0j_ZHI3v0WCZDVK@Ak5cz
y310@JPM_@lJSNBDK40MDfN@5jS_M0Gz_sM_@z@l440WWd_f20h9MM_@7xjS9QRG
6h6CoA90e@fQB7lIyzuiTLQB@10yxO1@7R@@U0WuqkIC5Nq7c_@h00iNVw7JMP5F
001shomlkyZ20tMT4x1cBcJ08UnYenu_@JG0N6vaoL4RWk0upypoNntub8jS66F@
41OPvBiNNaWLq_V5tjVI@@90WcMjjytonlbapVu8xG00010WdUijSs_ON2820000
8010A809808@S30W00WX4GeGT3go@XrlneGT60GTu_FAU7p@G9iFCOk11K8njyX0
0yAAYztca0ZfgseRwGw@d10eQCjb@MQyCa_D3n_pGNv6i_V2b6e202000i1fTJKN
cOd4@@3xvJ20cRa0DyhT2Foo@X8D810Y1nCnrrFH2DKaGZ_CaJH27_F30cQjsohh
DV6oFt08W20jbp0420WroRfGz40GU55nUZjbdGf16a2@C0m7@gblkGoP0W000002
180201rd00K0WsoPev_M4WNXrMUQTb@GRv9W46X8@yDGAZO4102DcBHRvI0GIKbM
00GDnubhJ5x25IsvU0W04CGQsQBNwdl7J00KB900W4xghkyh000fJF00e4x@VbdJ
0000000Vn100qM_@9DGB002Wkvr500ae400Wiy@l@VQVdeN00mAS500ooNwfRXS1
9U000DIE008De@RGw@_M_Fac@BsHT04mMw500QvJwEQI6000002859200r9_@TaV
A00gs700HRvor8WH5gN10aXxw4@FVh@ptw@M__FQGuJ_kn2r520doPf1Idqmp2mC
kQBFjypHgjSFGoSKalr@0000000WCTEd0GnkptIwal@@W2H1GiQ4nEvHusB0Ulxi
y@l@@bkWoW_@Z20MaNM_@dqWJz@J50wj@PytxT2g0mQNqM_@jb@VRv@7n_@ro@V@
@LNaTl2elgQB@@solTczU1m_QsM_@jb@VRv@tM_@jb@V@@@tM_@jb@V4xy000GiM
Uc505erM_@jbNT9sbsM_@TB@V1f@NYTl0002Iw@A0eoUZ6yC0wCv8s@lM_@pzcj_
@J00UEV@@@db@@9V@VRv@7n_@Pv@VoJJ20Enl@@@x@@@_@@l6a@h1v@_@n002000
0000020z@@m80FClt3h1O0000YH0I8@N3w@dXH0UOQW4M3mW_@PO4W4o8mWKuVe@
V30mmR100004G0mRPC000m040W0400000W0400W040W4P03Z0y004G00000004GQ
4m00G01b0Omh09W020aW20GZ0CW021iH06I38X61I8MW4Q4uXf1C00000800Y61I
08W0HO26W020000018wH60002GG00w@t00012dibGg164b03D8Om80HihG81xpmV
YFybE9bCy0200m_@D0CG0G@@902808G23000VwE00OT2c100yv800e@@@hb@@iy@
l@@@p9_@0fjVlzkg@7cY@P00003a_@V@@@@B0KG50Aa205H1W10;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 15, 14, 13, 95, 23, 23, 23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 16, 16, 16,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 18, 18, 18,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[46] =
-1, 524288, 262144, 131072, 65536, 32768, 16384, 8192, 2048, 512, 21760, 13056, 6912, 3328, 0, 16, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 0, 0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[19] =
294, 0, 0, 0, 294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[6 * 3 * 45] =
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -1,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  33,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  32,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  25,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  24,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  22,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  21,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  20,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  18,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  16,
0, 0,  0, 0, 0, 0, 3, 1536,12337, 3, 1280,12337, 0, 0, 0, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 3, 1280,12337, 1, 256, 13360, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 3, 1024,12337, 3, 768, 12337, 2, 0, 14128, 1, 0,  13360,
3, 768, 12337, 3, 512, 12337, 3, 256, 12337, 3, 0, 12337, 2, 0, 14128, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0,  98,
0, 0,  0, 0, 0, 0, 0, 0, 0, (39<<16)+0, 187, 32, (39<<16)+0, 145, 137, (39<<16)+0, 233, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (23<<16)+0, 187, 32, (23<<16)+0, 145, 137, (23<<16)+0, 237, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (15<<16)+0, 187, 32, (15<<16)+0, 145, 137, (7 <<16)+6, 113, 137,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0,  1025, 4, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0,  99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  99, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 2, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 129, 10, 98, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,
0, 0,  0, 0, 0, 0, 1, 1, 97, 1, 0,  97, 0, 2, 96, 0, 1,  96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0,  98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
BOOLEAN V261  = 0;
BOOLEAN V262  = 0;
BOOLEAN V263  = 0;
BOOLEAN V264  = 0;
BOOLEAN V265[10000];
BOOLEAN V266[3];
BOOLEAN V278[15];
BOOLEAN V279[16];
INTEGER V267;
INTEGER V268;
INTEGER V269;
BOOLEAN V189[80] = $80000000000000000000;
BOOLEAN V190[80] = $80010000000000000000;
BOOLEAN V192[80] = $00FF0000000000000000;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
INTEGER A113[1];
INTEGER A153[1];
BOOLEAN A18[21];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[5];
BOOLEAN A28[1];
BOOLEAN A31[50];
BOOLEAN A57[50];
BOOLEAN A29[603];
BOOLEAN A45[603];
BOOLEAN A30[603];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
BOOLEAN V216 = 0;
INTEGER V3 = 0;
INTEGER V4 = 0;
INTEGER V77 = 0;
INTEGER V78 = 0;
INTEGER V186;
INTEGER V187;
BOOLEAN b;
BOOLEAN ba[32];
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER m;
INTEGER n;
INTEGER V271;
INTEGER V270;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V211;
INTEGER V223;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V398 = 0;
INTEGER V188 = 0;
INTEGER V191 = 0;
BOOLEAN V233 = 0;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V272 = 0;
BOOLEAN V392 = 1;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN V231 = 0;
BOOLEAN V259 = 0;
BOOLEAN V260 = 0;
BOOLEAN V280 = 0;
BOOLEAN V293 = 0;
BOOLEAN V308 = 1;
BOOLEAN V310 = 0;
BOOLEAN V336 = 0;
BOOLEAN V337 = 0;
BOOLEAN V340 = 0;
BOOLEAN V370 = 0;
BOOLEAN V362 = 0;
BOOLEAN V421 = 0;
BOOLEAN A175 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
BOOLEAN USE_REV0_PROG_ALG = 0;
INTEGER V203 = 0;
BOOLEAN V228 = 0;
BOOLEAN V344 = 0;
BOOLEAN V431 = 1;
BOOLEAN V230 = 0;
BOOLEAN V232 = 0;
BOOLEAN V393 = 0;
ENDDATA;
PROCEDURE DO_READ_USERCODE USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE DO_HALT_ON_CHIP_CC USES TEMP_DATA;
V230 = 1;
ENDPROC;
PROCEDURE DO_IGNORE_IDCODE_ERRORS USES TEMP_DATA;
V232 = 1;
ENDPROC;
PROCEDURE DO_IGNORE_INTOSC_BYPASS USES TEMP_DATA;
V393 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_SECOND_IDCODE_READ USES TEMP_DATA;
A175 = 1;
ENDPROC;
PROCEDURE L20 USES TEMP_DATA;
V101 = 1;
ENDPROC;
PROCEDURE L25 USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE L966 USES TEMP_DATA;
V340 = 1;
ENDPROC;
PROCEDURE L27 USES DEVICE_DATA, TEMP_DATA, L39, L101, L107,
L141, L1190,
L1223,
L124, L113, L108, L93;
CALL L39;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L38;
IF ((V42 == 0) && V340) THEN CALL L108;
IF ((V42 == 0) && V340) THEN GOTO L38;
V3 = 0;
V4 = 32;
CALL L101;
IF (V2 == 0) THEN GOTO L28;
IF ((V42 == 0) && V101) THEN CALL L1190;
V3 = 0;
V4 = 32;
CALL L101;
IF ((V42 == 0) && V101) THEN CALL L141;
L28:
IF ((V42 == 0) && V104) THEN CALL L124;
L38:
CALL L93;
EXIT V42;
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA,
L106, L458, L108, L107;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
INTEGER V212 = 0;
INTEGER V224 = 0;
INTEGER V199 = 0;
INTEGER V201 = 0;
INTEGER V202 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L84;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L40;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L40:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L41;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L42;
L41:
l = l + 1;
L42:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L43;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L43:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L44;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L44:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V179 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L45;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L45:
V179 = V179 + j;
V180 = V180 + k;
NEXT i;
V211 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 16384) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L46;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L46:
V211 = V211 + j;
V212 = V212 + k;
NEXT i;
V223 = 0
;
V224 = 0
;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 32768) == 0) ||
((A13[i] & 4) == 0) ||
((A13[i] & 32) == 0)) THEN GOTO L47;
V2 = A105[i];
j = j + A1[V2];
k = k + A5[V2];
L47:
V223 = V223 + j;
V224 = V224 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L48;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L48:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L49;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L50;
L49:
l = l + 1;
L50:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L51;
V2 = A12[i];
j = A0[V2];
L51:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L52;
V2 = A12[i];
j = A0[V2];
L52:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L53;
V2 = A12[i];
j = A0[V2];
L53:
V17 = V17 + j;
NEXT i;
V181 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L54;
V2 = A12[i];
j = A0[V2];
L54:
V181 = V181 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;
V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
IF (V212 > V20) THEN V20 = V212;
IF (V224 > V20) THEN V20 = V224;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V211 > V19) THEN V19 = V211;
IF (V223 > V19) THEN V19 = V223;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A29[i] = 0;
A30[i] = 1;
NEXT i;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L55;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L55:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L56;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L56:
NEXT i;
CALL L106;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L84;
V4 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) != 0)) THEN
V4 = 32;
NEXT i;
IF (V4 != 32) THEN
GOTO L57;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] | 8;
NEXT i;
A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] & ~8;
NEXT i;
L57:
IF (V101 || V231 || V259 || V4 == 131072) THEN CALL L108;
IF (V42 != 0) THEN GOTO L84;
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L58;
A18[9..0] = $071;
CALL L458;
WAIT 10000 USEC;
L58:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L70;
A18[9..0] = $332;
CALL L458;
WAIT 10000 USEC;
V203 = 0;
L70:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L71;
A18[9..0] = $044;
CALL L458;
WAIT 10000 USEC;
L71:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L72;
IF (V103 || V102) THEN V38 = 1;
V38 = 0;
WAIT 10000 USEC;
L72:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L1187;
L1187:
V203 = 0;
CALL L107;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
NEXT i;
V4 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 131072) != 0) THEN V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L84;
V203 = 0;
L84:
ENDPROC;
PROCEDURE L85 USES DEVICE_DATA, TEMP_DATA, L88, L458 ;
IF (V233 || !V76 || (V42 != 0)) THEN GOTO L87;
A18[9..0] = $003;
V4 = 32;
CALL L458;
WAIT IDLE, 4096 CYCLES, 5 USEC, IDLE;
V233 = 1;
FOR i = 0 TO V1;
IF (A94[i] != 0) THEN
V191 = 1;
NEXT i;
IF(V191 == 1) THEN GOTO L86;
GOTO L87;
L86:
CALL L88;
L87:
ENDPROC;
PROCEDURE L88 USES DEVICE_DATA, TEMP_DATA, L458 ;
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32) == 0) ||
((A17[i] & 4) == 0) ||
(V42 != 0)) THEN
GOTO L91;
IF (A94[i] == 0) THEN GOTO L91;
V77 = 0;
V78 = 0;
V30 = 0;
FOR j = V1 TO 0 STEP -1;
IF (i == j) THEN GOTO L89;
IF ((A17[j] & 32) != 0) THEN
A17[j] = A17[j] & ~4;
IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;
IF (j < i) THEN V30 = V30 + A94[j];
L89:
NEXT j;
V31 = V30 + A94[i] - 1;
IF(V31 == V30) THEN GOTO L90;
PUSH i;
A18[9..0] = $00A;
CALL L458;
POP i;
PREDR V77;
POSTDR V78;
FOR j = 0 TO 100;
DRSCAN A94[i], A95[V31..V30], CAPTURE A45[79..0];
IF(A45[79] == 0) THEN j = 100;
NEXT j;
if(A45[79] == 0) THEN GOTO L90;
V42 = 12;
GOTO L92;
L90:
PREDR V77;
POSTDR V78;
DRSCAN 80, V192[79..0], CAPTURE A45[79..0];
L91:
NEXT i;
L92:
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
ENDPROC;
PROCEDURE L93 USES DEVICE_DATA, TEMP_DATA, L107, L458, L108, L113
, L85
;
IF (V42 == 1) THEN GOTO L100;
CALL L107;
CALL L85;
L94:
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L95;
A18[9..0] = $079;
CALL L458;
WAIT 10000 USEC;
L95:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L96;
A18[9..0] = $006;
CALL L458;
L96:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L96a;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L96a:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L97;
A18[9..0] = $04A;
WAIT 10000 USEC;
L97:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L98;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT 10000 USEC;
L98:
FOR i = 0 TO V1;
IF (((A17[i] & 131072) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L1193;
L1193:
IF ((!V76 && !V231 && !V259) || (V42 != 0)) THEN GOTO L99;
WAIT IDLE, 256 CYCLES, 10 USEC, IDLE;
V80 = 0;
IF (!V421 && !A175) THEN CALL L108;
IF ((V42 != 0) && V76) THEN V42 = 10;
IF ((V42 != 0) && !V76) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L100;
L99:
A18[9..0] = $3FF;
CALL L458;
IF (V105 && (V42 == 0)) THEN CALL L113;
L100:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF ((V42 == 10) && (V103)) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF ((V42 == 10) && (V101)) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
IF (V42 == 12) THEN
PRINT "Failed to configure Excalibur stripe";
IF (V42 == 14) THEN
PRINT "Failed to erase or program ASC device";
IF (V42 == 15) THEN
PRINT "Unable to erase the protected sector(s) of the ASC device";
IF (V42 == 18) THEN
PRINT "Reserved block start address mismatch - operation aborted";
IF (V42 == 19) THEN
PRINT "Unexpected problem has occurred during NAND flash bad block management.";
IF (V42 == 20) THEN
PRINT "Device is write-protected";
IF (V42 == 21) THEN
PRINT "Programming file size is larger than flash density";
IF (V42 == 22) THEN
PRINT "Programming file format is not aligned with flash type";
ENDPROC;
PROCEDURE L101 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L102;
V2 = 0;
V3 = 0;
GOTO L105;
L102:
V2 = A12[j - 1];
V3 = j;
IF(!V216) THEN GOTO L103;
V2 = A105[j - 1];
L103:
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048) ||
(V4 == 16384) || (V4 == 32768) ||
(V4 == 1024))
THEN GOTO L105;
IF (V58) THEN GOTO L104;
A41[9..0] = $066;
GOTO L105;
L104:
A41[9..0] = $006;
L105:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L106 USES DEVICE_DATA, TEMP_DATA, L107
;
CALL L107;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L107 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048 | 16384 | 131072)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && ((A17[i] & 32768) == 0) && ((A17[i] & 1024) == 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L108 USES DEVICE_DATA, TEMP_DATA, L107;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L107;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & (32 | 16384 | 131072 | 262144)) != 0) THEN
A18[9..0] = $006;
IF ((A17[i] & 65536) != 0) THEN
A18[3..0] = $E;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L109;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L110;
L109:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L110:
V27 = V27 + 1;
NEXT i;
V27 = 0;
k = 0;
push l;
FOR i = 0 TO V1;
IF (A61[k] != 0) THEN GOTO L111;
IF (A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
k = k + 1;
NEXT i;
GOTO L112;
L111:
V145 = 0;
FOR j = 0 TO 31;
IF (A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
l = 6;
FOR j = 0 TO (A61[k] - 1);
IF (V145 == A61[k+j+1]) THEN l = 0;
IF (l == 0) THEN j = A61[k];
NEXT j;
V27 = V27 + 32;
k = k + A61[k] + 1;
IF (l == 6) THEN
V42 = 6;
NEXT i;
L112:
pop l;
IF (V232 && (V42 != 0)) THEN
PRINT "IDCODE failures ignored";
IF (V232 && (V42 != 0)) THEN
V42 = 0;
ENDPROC;
PROCEDURE L113 USES DEVICE_DATA, TEMP_DATA, L107, L458, L119;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L114;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 16384) == 0) &&
((A17[V1 - V84] & 2048) == 0) &&
((A17[V1 - V84] & 131072) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L118;
j = V84;
k = V84;
L114:
CALL L107;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L115;
A18[9..0] = $006;
CALL L458;
WAIT 10000 USEC;
L115:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L116;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L116:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L117;
A18[9..0] = $201;
CALL L458;
WAIT 10000 USEC;
L117:
A18[9..0] = $3FF;
CALL L458;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 16384) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 16384;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (((A17[V1 - V84] & 131072) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 131072;
IF (V4 != 0) THEN CALL L119;
POP k; POP j; POP i;
NEXT i;
L118:
V84 = 0;
ENDPROC;
PROCEDURE L119 USES DEVICE_DATA, TEMP_DATA, L458, L123;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 16384) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
IF (V4 == 131072) THEN
A18[9..0] = $007;
CALL L458;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L123;
ENDPROC;
PROCEDURE L120 USES DEVICE_DATA, TEMP_DATA, L107, L458;
CALL L107;
V4 = 512;
j = 0;
FOR i = 0 TO V1;
A30[j] = 1;
l = 1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0)) THEN
GOTO L122;
l = 8 * 3;
FOR V27 = 0 TO l - 1;
A30[j + V27] = 1;
IF ((V27 % 3) == 0) THEN
A30[j + V27] = 0;
NEXT V27;
L122:
j = j + l;
NEXT i;
A18[9..0] = $055;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
DRSCAN j, A30[j - 1..0];
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $000;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
FOR i = 0 TO j - 1;
A30[i] = 1;
NEXT i;
ENDPROC;
PROCEDURE L123 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L124 USES DEVICE_DATA, TEMP_DATA, L107
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L126;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L127;
L125:
j = V84;
k = V84;
L126:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V86 = 0;
POP k; POP j; POP i;
NEXT i;
L127:
V84 = 0;
ENDPROC;
PROCEDURE L134 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L135 USES DEVICE_DATA, TEMP_DATA, L458;
A18[9..0] = $00A;
CALL L458;
PREDR V77;
POSTDR V78;
DRSCAN 80, V189[79..0], CAPTURE A45[79..0];
FOR i = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A29[79..0], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN i = 100;
NEXT i;
IF (A45[79] == 0) THEN GOTO L136;
V42 = 12;
GOTO L137;
L136:
PREDR V77;
POSTDR V78;
DRSCAN 80, V190[79..0], CAPTURE A45[79..0];
FOR i = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A29[79..0], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN i = 100;
NEXT i;
IF (A45[79] == 0) THEN GOTO L137;
V42 = 12;
L137:
ENDPROC;
PROCEDURE L138 USES DEVICE_DATA, TEMP_DATA;
V188 = (V187 - V186)/80;
FOR i = 0 TO V188;
FOR j = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A93[(V186 + 79)..V186], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN j = 100;
NEXT j;
IF (A45[79] == 0) THEN GOTO L139;
V42 = 12;
i = V188;
GOTO L140;
L139:
V186 = V186 + 80;
L140:
NEXT i;
ENDPROC;
PROCEDURE L1223 USES DEVICE_DATA, TEMP_DATA, L458, L849;
PUSH j;
PUSH m;
PUSH n;
PUSH i;
A31[22+V1..0] = A29[22+V1..0];
IF ((A186[j] & 512) == 0) THEN A31[j+22..j] = $500008;
IF ((A186[j] & 512) != 0) THEN A31[j+22..j] = $480008;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (23 + V1), A31[22+V1..0];
STATE IDLE;
A18[9..0] = $205;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (32 + V1), A29[31+V1..0], CAPTURE A31[31+V1..0];
WAIT IDLE, 3 CYCLES, IDLE;
ba[31..0] = A31[j+31..j];
Call L849;
IF (i == 0) THEN GOTO L1224;
i = i >> 23;
m = 0;
FOR n = 0 TO 8;
IF ((i & (1 << n)) != 0) THEN m = m + (1 << (8 - n));
NEXT n;
IF (m != 120 && m != 124 && m != 126) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Detected invalid Max 10 feature ID for device ", V0 - j;
IF (V42 != 0) THEN GOTO L1224;
IF (m > (A186[j] & 511)) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Incompatible feature ID for device ", V0 - j, ". Expected feature ID is ", (A186[j] & 511), " but fouL742 ", m;
L1224:
POP i;
POP n;
POP m;
POP j;
ENDPROC;
PROCEDURE L1190 USES DEVICE_DATA, TEMP_DATA, L458, L850, L1223;
push V91;
V91 = 1;
m = 0;
n = 0;
FOR i = 0 to V1;
IF ((A17[i] & 32) != 0 && (A17[i] & 4) != 0) THEN A17[i] = A17[i] | 8;
m = m + A25[i];
NEXT i;
FOR j = 0 to V1;
IF ((A17[j] & 32) == 0 ||
(A17[j] & 4) == 0 ||
(A17[j] & 524288) == 0) THEN GOTO L1191;
A17[j] = A17[j] & ~8;
A31[m-1..0] = A30[m-1..0];
A31[n+9..n] = $006;
IRSCAN m, A31[m-1..0], CAPTURE A57[m-1..0];
STATE IDLE;
A18[9..0] = $2CC;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
call L1223;
IF (V42 != 0) THEN GOTO L1192;
IF A57[n+2] == 1 THEN GOTO L1192;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 3 CYCLES, IDLE;
DRSCAN 23 + V1, A29[22+V1..0];
A18[9..0] = $3F2;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
A18[9..0] = $307;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN V0, A29[V1..0], CAPTURE A31[V1..0];
IF (A31[j] == 0) THEN V42 = 10;
IF (A31[j] == 0) THEN GOTO L1192;
STATE IDLE;
FOR m = 0 to 3;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
i = A174[j * 2];
IF (m == 0) THEN i = i - ((A174[j * 2 + 1]/32) + 1);
IF (m == 1) THEN i = 14 * (A174[j * 2 + 1]/64);
IF (m == 3) THEN i = i + (A174[j * 2 + 1]/32);
CALL L850;
k = j;
FOR i = 22 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
k = 23 + V1;
DRSCAN k, A31[k-1..0];
STATE IDLE;
A18[9..0] = $3F4;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
A31[j+31..j] = $6C48A50F; 
IF (m == 1) THEN A31[j+31..j] = $FFF7FFFF; 
k = 32 + V1;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
A18[9..0] = $307;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN V0, A29[V1..0], CAPTURE A31[V1..0];
STATE IDLE;
IF (A31[j] == 0) THEN V42 = 10;
IF (V42 != 0) THEN m = 2;
NEXT m;
L1192:
A18[9..0] = $201;
CALL L458;
WAIT IDLE, 1 CYCLES, 1000 USEC, IDLE;
A17[j] = A17[j] | 8;
L1191:
IF (V42 != 0) THEN j = V1;
n = n + A25[j];
NEXT j;
FOR i = 0 to V1;
A17[i] = A17[i] & ~8;
NEXT i;
pop V91;
ENDPROC;
PROCEDURE L141 USES DEVICE_DATA, TEMP_DATA, L107, L458, L138, L135;
PRINT "configuring SRAM device(s)...";
CALL L107;
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32) == 0) ||
((A17[i] & 4) == 0) ||
(V42 != 0)) THEN
GOTO L146;
V77 = 0;
V78 = 0;
V30 = 0;
V186 = 0;
FOR j = V1 TO 0 STEP -1;
IF (i == j) THEN GOTO L142;
IF ((A17[j] & 32) != 0) THEN
A17[j] = A17[j] & ~4;
IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;
IF (j < i) THEN V30 = V30 + A43[j];
IF (j < i) THEN V186 = V186 + A92[j];
L142:
NEXT j;
IF(A92[i] == 0) THEN
GOTO L143;
PUSH i;
CALL L135;
POP i;
V187 = V186 + A92[i] - 1;
PUSH i;
CALL L138;
POP i;
L143:
V31 = V30 + A43[i] - 1;
POSTDR V78;
PUSH i;
IF (((A147[i] & 2) == 0) ||
V393) THEN
GOTO L1094;
A18[9..0] = $2EE;
CALL L458;
L1094:
IF ((A17[i] & 64) == 0) THEN
GOTO L144;
A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
POP i;
PUSH i;
L144:
IF (((A17[i] & 128) == 0) || (V230 == 0)) THEN
GOTO L145;
A18[9..0] = $00D;
CALL L458;
WAIT 2500 USEC;
L145:
A18[9..0] = $002;
CALL L458;
FOR i = 0 TO 20;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
POP i;
DRSCAN A43[i], A42[V31..V30];
IF (USE_REV0_PROG_ALG) THEN DRSCAN 32, A30[31..0];
PUSH i;
A18[9..0] = $004;
CALL L458;
POP i;
PREDR V77;
POSTDR V78;
DRSCAN A59[i], A29[A59[i]-1..0], CAPTURE A45[A59[i]-1..0];
IF !A45[A60[i]] THEN V42 = 10;
PUSH i;
IF (((A147[i] & 2) == 0) ||
V393) THEN
GOTO L1095;
WAIT IDLE, 8192 CYCLES, 2048 USEC, IDLE;
A18[9..0] = $1EE;
CALL L458;
L1095:
CALL L107;
POP i;
L146:
NEXT i;
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
IF (V42 != 0) THEN
GOTO L147;
V76 = 1;
L147:
ENDPROC;
PROCEDURE L458 USES DEVICE_DATA, TEMP_DATA;
PUSH i;
PUSH j;
PUSH l;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L459;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L459;
V27 = 50;
A32[49..0] = A30[49..0];
L459:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L460;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L462;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L465;
L460:
IF ((A17[i] & 2) != 0) THEN GOTO L461;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L465;
L461:
IF (!V57) THEN GOTO L462;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L465;
L462:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
GOTO L465;
L465:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L466;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L466:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L467;
STATE IDLE;
WAIT 3 CYCLES;
L467:
POP l;
POP j;
POP i;
ENDPROC;
PROCEDURE L682 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF(V216) THEN V25 = 0;
IF(V216) THEN V26 = 0;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L683;
V2 = A12[i];
IF(V216) THEN V2 = A105[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L684;
L683:
IF (V74 && !V216) THEN A30[V24] = 0;
L684:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L849 USES TEMP_DATA;
PUSH j;
i = 0;
FOR j = 0 to 31;
IF (ba[j] == 1) THEN i = i + (1<<j);
NEXT j;
POP j;
ENDPROC;
PROCEDURE L850 USES TEMP_DATA;
PUSH j;
ba[31..0] = $00000000;
FOR j = 0 to 31;
IF (i&(1<<j))!=0 THEN ba[j]=1;
NEXT j;
POP j;
ENDPROC;
' END OF FILE
CRC 8203;
