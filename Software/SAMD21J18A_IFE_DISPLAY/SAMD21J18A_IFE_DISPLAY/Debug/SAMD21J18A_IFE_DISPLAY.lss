
SAMD21J18A_IFE_DISPLAY.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000047c  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000430  20000000  0000047c  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000020  20000430  000008ac  00010430  2**2
                  ALLOC
  3 .stack        00002000  20000450  000008cc  00010430  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00010430  2**0
                  CONTENTS, READONLY
  5 .comment      0000005b  00000000  00000000  00010458  2**0
                  CONTENTS, READONLY
  6 .debug_info   00004be7  00000000  00000000  000104b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000004b6  00000000  00000000  0001509a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000040  00000000  00000000  00015550  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000088  00000000  00000000  00015590  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000058  00000000  00000000  00015618  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00010ce9  00000000  00000000  00015670  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   000014bf  00000000  00000000  00026359  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0006c889  00000000  00000000  00027818  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000001d4  00000000  00000000  000940a4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <_sfixed>:
   0:	20002450 	.word	0x20002450
   4:	00000119 	.word	0x00000119
   8:	00000115 	.word	0x00000115
   c:	00000115 	.word	0x00000115
	...
  2c:	00000115 	.word	0x00000115
	...
  38:	00000115 	.word	0x00000115
  3c:	00000115 	.word	0x00000115
  40:	00000115 	.word	0x00000115
  44:	00000115 	.word	0x00000115
  48:	00000115 	.word	0x00000115
  4c:	00000115 	.word	0x00000115
  50:	00000115 	.word	0x00000115
  54:	00000115 	.word	0x00000115
  58:	00000115 	.word	0x00000115
  5c:	00000115 	.word	0x00000115
  60:	00000115 	.word	0x00000115
  64:	00000115 	.word	0x00000115
  68:	00000115 	.word	0x00000115
  6c:	00000115 	.word	0x00000115
  70:	00000115 	.word	0x00000115
  74:	00000115 	.word	0x00000115
  78:	00000115 	.word	0x00000115
  7c:	00000115 	.word	0x00000115
  80:	00000115 	.word	0x00000115
  84:	00000115 	.word	0x00000115
  88:	00000299 	.word	0x00000299
  8c:	00000115 	.word	0x00000115
  90:	00000115 	.word	0x00000115
  94:	00000115 	.word	0x00000115
  98:	00000115 	.word	0x00000115
  9c:	00000115 	.word	0x00000115
  a0:	00000115 	.word	0x00000115
  a4:	00000115 	.word	0x00000115
  a8:	00000115 	.word	0x00000115
  ac:	00000115 	.word	0x00000115
  b0:	00000000 	.word	0x00000000

000000b4 <__do_global_dtors_aux>:
  b4:	b510      	push	{r4, lr}
  b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
  b8:	7823      	ldrb	r3, [r4, #0]
  ba:	2b00      	cmp	r3, #0
  bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
  be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
  c0:	2b00      	cmp	r3, #0
  c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
  c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
  c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
  c8:	bf00      	nop
  ca:	2301      	movs	r3, #1
  cc:	7023      	strb	r3, [r4, #0]
  ce:	bd10      	pop	{r4, pc}
  d0:	20000430 	.word	0x20000430
  d4:	00000000 	.word	0x00000000
  d8:	0000047c 	.word	0x0000047c

000000dc <frame_dummy>:
  dc:	b508      	push	{r3, lr}
  de:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
  e0:	2b00      	cmp	r3, #0
  e2:	d003      	beq.n	ec <frame_dummy+0x10>
  e4:	4807      	ldr	r0, [pc, #28]	; (104 <frame_dummy+0x28>)
  e6:	4908      	ldr	r1, [pc, #32]	; (108 <frame_dummy+0x2c>)
  e8:	e000      	b.n	ec <frame_dummy+0x10>
  ea:	bf00      	nop
  ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
  ee:	6803      	ldr	r3, [r0, #0]
  f0:	2b00      	cmp	r3, #0
  f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
  f4:	bd08      	pop	{r3, pc}
  f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
  f8:	2b00      	cmp	r3, #0
  fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
  fc:	4798      	blx	r3
  fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
 100:	00000000 	.word	0x00000000
 104:	0000047c 	.word	0x0000047c
 108:	20000434 	.word	0x20000434
 10c:	0000047c 	.word	0x0000047c
 110:	00000000 	.word	0x00000000

00000114 <Dummy_Handler>:
 114:	e7fe      	b.n	114 <Dummy_Handler>
 116:	46c0      	nop			; (mov r8, r8)

00000118 <Reset_Handler>:
 118:	b570      	push	{r4, r5, r6, lr}
 11a:	4b2e      	ldr	r3, [pc, #184]	; (1d4 <Reset_Handler+0xbc>)
 11c:	4a2e      	ldr	r2, [pc, #184]	; (1d8 <Reset_Handler+0xc0>)
 11e:	429a      	cmp	r2, r3
 120:	d003      	beq.n	12a <Reset_Handler+0x12>
 122:	4b2e      	ldr	r3, [pc, #184]	; (1dc <Reset_Handler+0xc4>)
 124:	4a2b      	ldr	r2, [pc, #172]	; (1d4 <Reset_Handler+0xbc>)
 126:	429a      	cmp	r2, r3
 128:	d304      	bcc.n	134 <Reset_Handler+0x1c>
 12a:	4b2d      	ldr	r3, [pc, #180]	; (1e0 <Reset_Handler+0xc8>)
 12c:	4a2d      	ldr	r2, [pc, #180]	; (1e4 <Reset_Handler+0xcc>)
 12e:	429a      	cmp	r2, r3
 130:	d310      	bcc.n	154 <Reset_Handler+0x3c>
 132:	e01e      	b.n	172 <Reset_Handler+0x5a>
 134:	4a2c      	ldr	r2, [pc, #176]	; (1e8 <Reset_Handler+0xd0>)
 136:	4b29      	ldr	r3, [pc, #164]	; (1dc <Reset_Handler+0xc4>)
 138:	3303      	adds	r3, #3
 13a:	1a9b      	subs	r3, r3, r2
 13c:	089b      	lsrs	r3, r3, #2
 13e:	3301      	adds	r3, #1
 140:	009b      	lsls	r3, r3, #2
 142:	2200      	movs	r2, #0
 144:	4823      	ldr	r0, [pc, #140]	; (1d4 <Reset_Handler+0xbc>)
 146:	4924      	ldr	r1, [pc, #144]	; (1d8 <Reset_Handler+0xc0>)
 148:	588c      	ldr	r4, [r1, r2]
 14a:	5084      	str	r4, [r0, r2]
 14c:	3204      	adds	r2, #4
 14e:	429a      	cmp	r2, r3
 150:	d1fa      	bne.n	148 <Reset_Handler+0x30>
 152:	e7ea      	b.n	12a <Reset_Handler+0x12>
 154:	4a25      	ldr	r2, [pc, #148]	; (1ec <Reset_Handler+0xd4>)
 156:	4b22      	ldr	r3, [pc, #136]	; (1e0 <Reset_Handler+0xc8>)
 158:	3303      	adds	r3, #3
 15a:	1a9b      	subs	r3, r3, r2
 15c:	089b      	lsrs	r3, r3, #2
 15e:	3301      	adds	r3, #1
 160:	009b      	lsls	r3, r3, #2
 162:	2200      	movs	r2, #0
 164:	481f      	ldr	r0, [pc, #124]	; (1e4 <Reset_Handler+0xcc>)
 166:	2100      	movs	r1, #0
 168:	1814      	adds	r4, r2, r0
 16a:	6021      	str	r1, [r4, #0]
 16c:	3204      	adds	r2, #4
 16e:	429a      	cmp	r2, r3
 170:	d1fa      	bne.n	168 <Reset_Handler+0x50>
 172:	4a1f      	ldr	r2, [pc, #124]	; (1f0 <Reset_Handler+0xd8>)
 174:	21ff      	movs	r1, #255	; 0xff
 176:	4b1f      	ldr	r3, [pc, #124]	; (1f4 <Reset_Handler+0xdc>)
 178:	438b      	bics	r3, r1
 17a:	6093      	str	r3, [r2, #8]
 17c:	39fd      	subs	r1, #253	; 0xfd
 17e:	2390      	movs	r3, #144	; 0x90
 180:	005b      	lsls	r3, r3, #1
 182:	4a1d      	ldr	r2, [pc, #116]	; (1f8 <Reset_Handler+0xe0>)
 184:	50d1      	str	r1, [r2, r3]
 186:	481d      	ldr	r0, [pc, #116]	; (1fc <Reset_Handler+0xe4>)
 188:	78c3      	ldrb	r3, [r0, #3]
 18a:	2403      	movs	r4, #3
 18c:	43a3      	bics	r3, r4
 18e:	2202      	movs	r2, #2
 190:	4313      	orrs	r3, r2
 192:	70c3      	strb	r3, [r0, #3]
 194:	78c3      	ldrb	r3, [r0, #3]
 196:	260c      	movs	r6, #12
 198:	43b3      	bics	r3, r6
 19a:	2108      	movs	r1, #8
 19c:	430b      	orrs	r3, r1
 19e:	70c3      	strb	r3, [r0, #3]
 1a0:	4b17      	ldr	r3, [pc, #92]	; (200 <Reset_Handler+0xe8>)
 1a2:	7b98      	ldrb	r0, [r3, #14]
 1a4:	2530      	movs	r5, #48	; 0x30
 1a6:	43a8      	bics	r0, r5
 1a8:	1c05      	adds	r5, r0, #0
 1aa:	2020      	movs	r0, #32
 1ac:	4328      	orrs	r0, r5
 1ae:	7398      	strb	r0, [r3, #14]
 1b0:	7b98      	ldrb	r0, [r3, #14]
 1b2:	43b0      	bics	r0, r6
 1b4:	4301      	orrs	r1, r0
 1b6:	7399      	strb	r1, [r3, #14]
 1b8:	7b99      	ldrb	r1, [r3, #14]
 1ba:	43a1      	bics	r1, r4
 1bc:	430a      	orrs	r2, r1
 1be:	739a      	strb	r2, [r3, #14]
 1c0:	4a10      	ldr	r2, [pc, #64]	; (204 <Reset_Handler+0xec>)
 1c2:	6851      	ldr	r1, [r2, #4]
 1c4:	2380      	movs	r3, #128	; 0x80
 1c6:	430b      	orrs	r3, r1
 1c8:	6053      	str	r3, [r2, #4]
 1ca:	4b0f      	ldr	r3, [pc, #60]	; (208 <Reset_Handler+0xf0>)
 1cc:	4798      	blx	r3
 1ce:	4b0f      	ldr	r3, [pc, #60]	; (20c <Reset_Handler+0xf4>)
 1d0:	4798      	blx	r3
 1d2:	e7fe      	b.n	1d2 <Reset_Handler+0xba>
 1d4:	20000000 	.word	0x20000000
 1d8:	0000047c 	.word	0x0000047c
 1dc:	20000430 	.word	0x20000430
 1e0:	20000450 	.word	0x20000450
 1e4:	20000430 	.word	0x20000430
 1e8:	20000004 	.word	0x20000004
 1ec:	20000434 	.word	0x20000434
 1f0:	e000ed00 	.word	0xe000ed00
 1f4:	00000000 	.word	0x00000000
 1f8:	41007000 	.word	0x41007000
 1fc:	41005000 	.word	0x41005000
 200:	41004800 	.word	0x41004800
 204:	41004000 	.word	0x41004000
 208:	000002d9 	.word	0x000002d9
 20c:	0000026d 	.word	0x0000026d

00000210 <SystemInit>:
 210:	4a01      	ldr	r2, [pc, #4]	; (218 <SystemInit+0x8>)
 212:	4b02      	ldr	r3, [pc, #8]	; (21c <SystemInit+0xc>)
 214:	601a      	str	r2, [r3, #0]
 216:	4770      	bx	lr
 218:	000f4240 	.word	0x000f4240
 21c:	20000000 	.word	0x20000000

00000220 <init_TC3>:

void init_TC3()
{
	/* Configure Timer/Counter 3 as a timer to blink LED0 */
	// Configure Clocks
	REG_GCLK_CLKCTRL = GCLK_CLKCTRL_CLKEN | GCLK_CLKCTRL_GEN_GCLK0 | GCLK_CLKCTRL_ID_TCC2_TC3;
 220:	4a0d      	ldr	r2, [pc, #52]	; (258 <init_TC3+0x38>)
 222:	4b0e      	ldr	r3, [pc, #56]	; (25c <init_TC3+0x3c>)
 224:	801a      	strh	r2, [r3, #0]
	REG_PM_APBCMASK |= PM_APBCMASK_TC3; // Enable TC3 bus clock
 226:	4a0e      	ldr	r2, [pc, #56]	; (260 <init_TC3+0x40>)
 228:	6813      	ldr	r3, [r2, #0]
 22a:	2180      	movs	r1, #128	; 0x80
 22c:	0109      	lsls	r1, r1, #4
 22e:	430b      	orrs	r3, r1
 230:	6013      	str	r3, [r2, #0]
	
	// Configure TC3 (16 bit counter by default)
	REG_TC3_CTRLA |= TC_CTRLA_PRESCALER_DIV8;
 232:	4b0c      	ldr	r3, [pc, #48]	; (264 <init_TC3+0x44>)
 234:	8819      	ldrh	r1, [r3, #0]
 236:	22c0      	movs	r2, #192	; 0xc0
 238:	0092      	lsls	r2, r2, #2
 23a:	430a      	orrs	r2, r1
 23c:	801a      	strh	r2, [r3, #0]
	
	// Enable interrupts
	REG_TC3_INTENSET = TC_INTENSET_OVF | TC_INTENSET_ERR;
 23e:	2103      	movs	r1, #3
 240:	4a09      	ldr	r2, [pc, #36]	; (268 <init_TC3+0x48>)
 242:	7011      	strb	r1, [r2, #0]
	
	// Enable TC3
	REG_TC3_CTRLA |= TC_CTRLA_ENABLE;
 244:	8819      	ldrh	r1, [r3, #0]
 246:	2202      	movs	r2, #2
 248:	430a      	orrs	r2, r1
 24a:	801a      	strh	r2, [r3, #0]
	while ( TC3->COUNT16.STATUS.bit.SYNCBUSY == 1 ){} // wait for TC3 to be enabled
 24c:	1c1a      	adds	r2, r3, #0
 24e:	7bd3      	ldrb	r3, [r2, #15]
 250:	09db      	lsrs	r3, r3, #7
 252:	2b01      	cmp	r3, #1
 254:	d0fb      	beq.n	24e <init_TC3+0x2e>
}
 256:	4770      	bx	lr
 258:	0000401b 	.word	0x0000401b
 25c:	40000c02 	.word	0x40000c02
 260:	40000420 	.word	0x40000420
 264:	42002c00 	.word	0x42002c00
 268:	42002c0d 	.word	0x42002c0d

0000026c <main>:

// Global error flag for TC3
volatile uint8_t TC3_error = 0;

int main(void)
{
 26c:	b508      	push	{r3, lr}
	SystemInit(); // Initialize the SAM system
 26e:	4b06      	ldr	r3, [pc, #24]	; (288 <main+0x1c>)
 270:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
 272:	2280      	movs	r2, #128	; 0x80
 274:	02d2      	lsls	r2, r2, #11
 276:	4b05      	ldr	r3, [pc, #20]	; (28c <main+0x20>)
 278:	601a      	str	r2, [r3, #0]
	enable_interrupts();
	init_TC3();
 27a:	4b05      	ldr	r3, [pc, #20]	; (290 <main+0x24>)
 27c:	4798      	blx	r3
	
	// Configure LED0 as output
	REG_PORT_DIRSET1 = LED0;
 27e:	2280      	movs	r2, #128	; 0x80
 280:	05d2      	lsls	r2, r2, #23
 282:	4b04      	ldr	r3, [pc, #16]	; (294 <main+0x28>)
 284:	601a      	str	r2, [r3, #0]
	
	while (1)
	{
		
	}
 286:	e7fe      	b.n	286 <main+0x1a>
 288:	00000211 	.word	0x00000211
 28c:	e000e100 	.word	0xe000e100
 290:	00000221 	.word	0x00000221
 294:	41004488 	.word	0x41004488

00000298 <TC3_Handler>:


void TC3_Handler()
{
	// Overflow interrupt triggered
	if ( TC3->COUNT16.INTFLAG.bit.OVF == 1 )
 298:	4b0b      	ldr	r3, [pc, #44]	; (2c8 <TC3_Handler+0x30>)
 29a:	7b9b      	ldrb	r3, [r3, #14]
 29c:	07db      	lsls	r3, r3, #31
 29e:	d507      	bpl.n	2b0 <TC3_Handler+0x18>
	{
		REG_PORT_OUTTGL1 = LED0;
 2a0:	2280      	movs	r2, #128	; 0x80
 2a2:	05d2      	lsls	r2, r2, #23
 2a4:	4b09      	ldr	r3, [pc, #36]	; (2cc <TC3_Handler+0x34>)
 2a6:	601a      	str	r2, [r3, #0]
		REG_TC3_INTFLAG = TC_INTFLAG_OVF;
 2a8:	2201      	movs	r2, #1
 2aa:	4b09      	ldr	r3, [pc, #36]	; (2d0 <TC3_Handler+0x38>)
 2ac:	701a      	strb	r2, [r3, #0]
 2ae:	e009      	b.n	2c4 <TC3_Handler+0x2c>
	}
	
	// Error interrupt triggered
	else if ( TC3->COUNT16.INTFLAG.bit.ERR == 1 )
 2b0:	4b05      	ldr	r3, [pc, #20]	; (2c8 <TC3_Handler+0x30>)
 2b2:	7b9b      	ldrb	r3, [r3, #14]
 2b4:	079b      	lsls	r3, r3, #30
 2b6:	d505      	bpl.n	2c4 <TC3_Handler+0x2c>
	{
		TC3_error = 1;
 2b8:	2201      	movs	r2, #1
 2ba:	4b06      	ldr	r3, [pc, #24]	; (2d4 <TC3_Handler+0x3c>)
 2bc:	701a      	strb	r2, [r3, #0]
		REG_TC3_INTFLAG = TC_INTFLAG_ERR;
 2be:	3201      	adds	r2, #1
 2c0:	4b03      	ldr	r3, [pc, #12]	; (2d0 <TC3_Handler+0x38>)
 2c2:	701a      	strb	r2, [r3, #0]
	}
}
 2c4:	4770      	bx	lr
 2c6:	46c0      	nop			; (mov r8, r8)
 2c8:	42002c00 	.word	0x42002c00
 2cc:	4100449c 	.word	0x4100449c
 2d0:	42002c0e 	.word	0x42002c0e
 2d4:	2000044c 	.word	0x2000044c

000002d8 <__libc_init_array>:
 2d8:	b570      	push	{r4, r5, r6, lr}
 2da:	4e0d      	ldr	r6, [pc, #52]	; (310 <__libc_init_array+0x38>)
 2dc:	4d0d      	ldr	r5, [pc, #52]	; (314 <__libc_init_array+0x3c>)
 2de:	2400      	movs	r4, #0
 2e0:	1bad      	subs	r5, r5, r6
 2e2:	10ad      	asrs	r5, r5, #2
 2e4:	d005      	beq.n	2f2 <__libc_init_array+0x1a>
 2e6:	00a3      	lsls	r3, r4, #2
 2e8:	58f3      	ldr	r3, [r6, r3]
 2ea:	3401      	adds	r4, #1
 2ec:	4798      	blx	r3
 2ee:	42a5      	cmp	r5, r4
 2f0:	d1f9      	bne.n	2e6 <__libc_init_array+0xe>
 2f2:	f000 f8b1 	bl	458 <_init>
 2f6:	4e08      	ldr	r6, [pc, #32]	; (318 <__libc_init_array+0x40>)
 2f8:	4d08      	ldr	r5, [pc, #32]	; (31c <__libc_init_array+0x44>)
 2fa:	2400      	movs	r4, #0
 2fc:	1bad      	subs	r5, r5, r6
 2fe:	10ad      	asrs	r5, r5, #2
 300:	d005      	beq.n	30e <__libc_init_array+0x36>
 302:	00a3      	lsls	r3, r4, #2
 304:	58f3      	ldr	r3, [r6, r3]
 306:	3401      	adds	r4, #1
 308:	4798      	blx	r3
 30a:	42a5      	cmp	r5, r4
 30c:	d1f9      	bne.n	302 <__libc_init_array+0x2a>
 30e:	bd70      	pop	{r4, r5, r6, pc}
 310:	00000464 	.word	0x00000464
 314:	00000464 	.word	0x00000464
 318:	00000464 	.word	0x00000464
 31c:	0000046c 	.word	0x0000046c

00000320 <register_fini>:
 320:	b508      	push	{r3, lr}
 322:	4b03      	ldr	r3, [pc, #12]	; (330 <register_fini+0x10>)
 324:	2b00      	cmp	r3, #0
 326:	d002      	beq.n	32e <register_fini+0xe>
 328:	4802      	ldr	r0, [pc, #8]	; (334 <register_fini+0x14>)
 32a:	f000 f805 	bl	338 <atexit>
 32e:	bd08      	pop	{r3, pc}
 330:	00000000 	.word	0x00000000
 334:	00000349 	.word	0x00000349

00000338 <atexit>:
 338:	b508      	push	{r3, lr}
 33a:	1c01      	adds	r1, r0, #0
 33c:	2200      	movs	r2, #0
 33e:	2000      	movs	r0, #0
 340:	2300      	movs	r3, #0
 342:	f000 f81b 	bl	37c <__register_exitproc>
 346:	bd08      	pop	{r3, pc}

00000348 <__libc_fini_array>:
 348:	b538      	push	{r3, r4, r5, lr}
 34a:	4b09      	ldr	r3, [pc, #36]	; (370 <__libc_fini_array+0x28>)
 34c:	4c09      	ldr	r4, [pc, #36]	; (374 <__libc_fini_array+0x2c>)
 34e:	1ae4      	subs	r4, r4, r3
 350:	10a4      	asrs	r4, r4, #2
 352:	d009      	beq.n	368 <__libc_fini_array+0x20>
 354:	4a08      	ldr	r2, [pc, #32]	; (378 <__libc_fini_array+0x30>)
 356:	18a5      	adds	r5, r4, r2
 358:	00ad      	lsls	r5, r5, #2
 35a:	18ed      	adds	r5, r5, r3
 35c:	682b      	ldr	r3, [r5, #0]
 35e:	3c01      	subs	r4, #1
 360:	4798      	blx	r3
 362:	3d04      	subs	r5, #4
 364:	2c00      	cmp	r4, #0
 366:	d1f9      	bne.n	35c <__libc_fini_array+0x14>
 368:	f000 f880 	bl	46c <_fini>
 36c:	bd38      	pop	{r3, r4, r5, pc}
 36e:	46c0      	nop			; (mov r8, r8)
 370:	00000478 	.word	0x00000478
 374:	0000047c 	.word	0x0000047c
 378:	3fffffff 	.word	0x3fffffff

0000037c <__register_exitproc>:
 37c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 37e:	4644      	mov	r4, r8
 380:	465f      	mov	r7, fp
 382:	4656      	mov	r6, sl
 384:	464d      	mov	r5, r9
 386:	469b      	mov	fp, r3
 388:	4b2f      	ldr	r3, [pc, #188]	; (448 <__register_exitproc+0xcc>)
 38a:	b4f0      	push	{r4, r5, r6, r7}
 38c:	681c      	ldr	r4, [r3, #0]
 38e:	23a4      	movs	r3, #164	; 0xa4
 390:	005b      	lsls	r3, r3, #1
 392:	1c05      	adds	r5, r0, #0
 394:	58e0      	ldr	r0, [r4, r3]
 396:	1c0e      	adds	r6, r1, #0
 398:	4690      	mov	r8, r2
 39a:	2800      	cmp	r0, #0
 39c:	d04b      	beq.n	436 <__register_exitproc+0xba>
 39e:	6843      	ldr	r3, [r0, #4]
 3a0:	2b1f      	cmp	r3, #31
 3a2:	dc0d      	bgt.n	3c0 <__register_exitproc+0x44>
 3a4:	1c5c      	adds	r4, r3, #1
 3a6:	2d00      	cmp	r5, #0
 3a8:	d121      	bne.n	3ee <__register_exitproc+0x72>
 3aa:	3302      	adds	r3, #2
 3ac:	009b      	lsls	r3, r3, #2
 3ae:	6044      	str	r4, [r0, #4]
 3b0:	501e      	str	r6, [r3, r0]
 3b2:	2000      	movs	r0, #0
 3b4:	bc3c      	pop	{r2, r3, r4, r5}
 3b6:	4690      	mov	r8, r2
 3b8:	4699      	mov	r9, r3
 3ba:	46a2      	mov	sl, r4
 3bc:	46ab      	mov	fp, r5
 3be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 3c0:	4b22      	ldr	r3, [pc, #136]	; (44c <__register_exitproc+0xd0>)
 3c2:	2b00      	cmp	r3, #0
 3c4:	d03c      	beq.n	440 <__register_exitproc+0xc4>
 3c6:	20c8      	movs	r0, #200	; 0xc8
 3c8:	0040      	lsls	r0, r0, #1
 3ca:	e000      	b.n	3ce <__register_exitproc+0x52>
 3cc:	bf00      	nop
 3ce:	2800      	cmp	r0, #0
 3d0:	d036      	beq.n	440 <__register_exitproc+0xc4>
 3d2:	22a4      	movs	r2, #164	; 0xa4
 3d4:	2300      	movs	r3, #0
 3d6:	0052      	lsls	r2, r2, #1
 3d8:	58a1      	ldr	r1, [r4, r2]
 3da:	6043      	str	r3, [r0, #4]
 3dc:	6001      	str	r1, [r0, #0]
 3de:	50a0      	str	r0, [r4, r2]
 3e0:	3240      	adds	r2, #64	; 0x40
 3e2:	5083      	str	r3, [r0, r2]
 3e4:	3204      	adds	r2, #4
 3e6:	5083      	str	r3, [r0, r2]
 3e8:	2401      	movs	r4, #1
 3ea:	2d00      	cmp	r5, #0
 3ec:	d0dd      	beq.n	3aa <__register_exitproc+0x2e>
 3ee:	009a      	lsls	r2, r3, #2
 3f0:	4691      	mov	r9, r2
 3f2:	4481      	add	r9, r0
 3f4:	4642      	mov	r2, r8
 3f6:	2188      	movs	r1, #136	; 0x88
 3f8:	464f      	mov	r7, r9
 3fa:	507a      	str	r2, [r7, r1]
 3fc:	22c4      	movs	r2, #196	; 0xc4
 3fe:	0052      	lsls	r2, r2, #1
 400:	4690      	mov	r8, r2
 402:	4480      	add	r8, r0
 404:	4642      	mov	r2, r8
 406:	3987      	subs	r1, #135	; 0x87
 408:	4099      	lsls	r1, r3
 40a:	6812      	ldr	r2, [r2, #0]
 40c:	468a      	mov	sl, r1
 40e:	430a      	orrs	r2, r1
 410:	4694      	mov	ip, r2
 412:	4642      	mov	r2, r8
 414:	4661      	mov	r1, ip
 416:	6011      	str	r1, [r2, #0]
 418:	2284      	movs	r2, #132	; 0x84
 41a:	4649      	mov	r1, r9
 41c:	465f      	mov	r7, fp
 41e:	0052      	lsls	r2, r2, #1
 420:	508f      	str	r7, [r1, r2]
 422:	2d02      	cmp	r5, #2
 424:	d1c1      	bne.n	3aa <__register_exitproc+0x2e>
 426:	1c02      	adds	r2, r0, #0
 428:	4655      	mov	r5, sl
 42a:	328d      	adds	r2, #141	; 0x8d
 42c:	32ff      	adds	r2, #255	; 0xff
 42e:	6811      	ldr	r1, [r2, #0]
 430:	430d      	orrs	r5, r1
 432:	6015      	str	r5, [r2, #0]
 434:	e7b9      	b.n	3aa <__register_exitproc+0x2e>
 436:	1c20      	adds	r0, r4, #0
 438:	304d      	adds	r0, #77	; 0x4d
 43a:	30ff      	adds	r0, #255	; 0xff
 43c:	50e0      	str	r0, [r4, r3]
 43e:	e7ae      	b.n	39e <__register_exitproc+0x22>
 440:	2001      	movs	r0, #1
 442:	4240      	negs	r0, r0
 444:	e7b6      	b.n	3b4 <__register_exitproc+0x38>
 446:	46c0      	nop			; (mov r8, r8)
 448:	00000454 	.word	0x00000454
 44c:	00000000 	.word	0x00000000
 450:	00000043 	.word	0x00000043

00000454 <_global_impure_ptr>:
 454:	20000008                                ... 

00000458 <_init>:
 458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 45a:	46c0      	nop			; (mov r8, r8)
 45c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 45e:	bc08      	pop	{r3}
 460:	469e      	mov	lr, r3
 462:	4770      	bx	lr

00000464 <__init_array_start>:
 464:	00000321 	.word	0x00000321

00000468 <__frame_dummy_init_array_entry>:
 468:	000000dd                                ....

0000046c <_fini>:
 46c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 46e:	46c0      	nop			; (mov r8, r8)
 470:	bcf8      	pop	{r3, r4, r5, r6, r7}
 472:	bc08      	pop	{r3}
 474:	469e      	mov	lr, r3
 476:	4770      	bx	lr

00000478 <__fini_array_start>:
 478:	000000b5 	.word	0x000000b5
